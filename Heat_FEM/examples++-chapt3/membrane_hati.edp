// file membrane.edp
real a=1,b=1; // the length of the semimajor axis and  semiminor axis
func z=x;

border Gamma1(t=0,pi*0.5)   { x = a*cos(t)+0.5; y = b*sin(t); }
border Gamma2(t=pi*0.5,pi)  { x = a*cos(t)-0.5; y = b*sin(t); }
border Gamma3(t=pi,2*pi)    { x = 2*a*cos(t); y = 2*a*cos(t);}
mesh Th=buildmesh(Gamma1(50)+Gamma2(50)+Gamma3(50));   // construction of mesh

fespace Vh(Th,P2); // P2 conforming triangular FEM
Vh phi,w, f=1;

solve Laplace(phi,w)=int2d(Th)(dx(phi)*dx(w) + dy(phi)*dy(w))
                - int2d(Th)(f*w) + on(Gamma1,Gamma2,Gamma3,phi=x);  // resolution of laplace equation
plot(phi,wait=true, ps="membrane.eps"); //Plot Th and v
plot(Th,wait=true, ps="membraneTh.eps"); //Plot Th and v

// to build a gnuplot data file
{ ofstream ff("graph.txt");
   for (int i=0;i<Th.nt;i++)
   { for (int j=0; j <3; j++)
       ff<<Th[i][j].x  << "    "<< Th[i][j].y<< "  "<<phi[][Vh(i,j)]<<endl;
    ff<<Th[i][0].x  << "    "<< Th[i][0].y<< "  "<<phi[][Vh(i,0)]<<endl
      <<endl<<endl;
   }
}

savemesh(Th,"Th.msh");
